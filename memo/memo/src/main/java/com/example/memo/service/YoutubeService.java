package com.example.memo.service;

import com.example.memo.dto.YoutubeResponseDto;
import org.json.JSONArray;
import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Scanner;

@Service
public class YoutubeService {
  
  @Value("${youtube.api.key}")
  private String apiKey;
  
  public String getVideoTitle(String videoUrl) throws IOException {
    String videoId = extractVideoId(videoUrl);
    String apiUrl = "https://www.googleapis.com/youtube/v3/videos?part=snippet&id=" + videoId + "&key=" + apiKey;
    
    RestTemplate restTemplate = new RestTemplate();
    String response = restTemplate.getForObject(apiUrl, String.class);
    
    JSONObject jsonResponse = new JSONObject(response);
    JSONArray items = jsonResponse.getJSONArray("items");
    if (items.length() > 0) {
      JSONObject snippet = items.getJSONObject(0).getJSONObject("snippet");
      return snippet.getString("title");
    } else {
      throw new RuntimeException("No video found with the provided URL.");
    }
  }
  
  // 비디오 ID를 기반으로 기본 언어를 가져오는 메서드
  public String getDefaultLanguage(String videoId) throws IOException {
    String apiUrl = "https://www.googleapis.com/youtube/v3/videos?part=snippet&id=" + videoId + "&key=" + apiKey;
    
    RestTemplate restTemplate = new RestTemplate();
    String response = restTemplate.getForObject(apiUrl, String.class);
    
    JSONObject jsonResponse = new JSONObject(response);
    JSONArray items = jsonResponse.getJSONArray("items");
    if (items.length() > 0) {
      JSONObject snippet = items.getJSONObject(0).getJSONObject("snippet");
      return snippet.getString("defaultAudioLanguage");
    } else {
      throw new RuntimeException("No video found with the provided URL.");
    }
  }
  
  // 자막을 가져오는 메서드
  public String getAutoGeneratedCaptions(String videoId, String languageCode) throws IOException {
    String apiUrl = "https://www.youtube.com/api/timedtext?v=" + videoId + "&lang=" + languageCode + "&fmt=srv3";
    
    URL url = new URL(apiUrl);
    HttpURLConnection connection = (HttpURLConnection) url.openConnection();
    connection.setRequestMethod("GET");
    
    InputStream inputStream = connection.getInputStream();
    Scanner scanner = new Scanner(inputStream).useDelimiter("\\A");
    return scanner.hasNext() ? scanner.next() : "";
  }
  
  // 비디오의 기본 언어와 자동 생성 자막을 가져오는 메서드
  public YoutubeResponseDto getVideoDetails(String videoUrl) throws IOException {
    String videoId = extractVideoId(videoUrl);
    String title = getVideoTitle(videoUrl);
    
    // 비디오의 기본 언어를 가져온 후, 자동 생성 자막을 가져옵니다.
    String defaultLanguage = getDefaultLanguage(videoId);
    String subtitles = getAutoGeneratedCaptions(videoId, defaultLanguage);
    
    return new YoutubeResponseDto(title, subtitles);
  }
  
  // 비디오 URL에서 비디오 ID를 추출하는 메서드
  private String extractVideoId(String videoUrl) {
    String[] parts = videoUrl.split("v=");
    if (parts.length > 1) {
      String videoId = parts[1];
      int ampersandIndex = videoId.indexOf("&");
      if (ampersandIndex != -1) {
        videoId = videoId.substring(0, ampersandIndex);
      }
      return videoId;
    } else {
      return "";
    }
  }
}
